version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: pokemon_db
    environment:
      POSTGRES_DB: pokemon_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pokemon_db"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - pokemon_network

  backend:
    build: 
      context: ./apps/backend
      target: production
    container_name: pokemon_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: production
      JWT_SECRET: your-super-secret-jwt-key-here-change-in-production
      JWT_REFRESH_SECRET: your-refresh-secret-key-here-change-in-production
      JWT_EXPIRATION: 15m
      JWT_REFRESH_EXPIRATION: 7d
      DATABASE_URL: postgresql://postgres:password123@db:5432/pokemon_db
      POKEAPI_BASE_URL: https://pokeapi.co/api/v2
      PORT: 3000
      CORS_ORIGIN: http://localhost:3000,http://frontend:3000
    ports:
      - "3001:3000"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - pokemon_network

  frontend:
    build:
      context: ./apps/frontend
      target: production
    container_name: pokemon_frontend
    depends_on:
      backend:
        condition: service_healthy
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://localhost:3001
      NEXTAUTH_SECRET: your-nextauth-secret-here-change-in-production
      NEXTAUTH_URL: http://localhost:3000
    ports:
      - "3000:3000"
    networks:
      - pokemon_network

volumes:
  postgres_data:

networks:
  pokemon_network:
    driver: bridge